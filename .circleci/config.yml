# CircleCI build config to test the Google Cloud Platform Container Registry Orb published by CircleCI

version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@dev:alpha

executors:
  cli:
    resource_class: small
    docker:
      - image: circleci/circleci-cli
  lint-condo:
    resource_class: small
    docker:
      - image: singapore/lint-condo
  node:
    resource_class: small
    docker:
      - image: circleci/node

jobs:
  lint:
    executor: lint-condo
    steps:
      - checkout
      - run: yamllint .

  validate:
    executor: cli
    steps:
      - checkout
      - run: circleci orb validate src/@orb.yml

  publish-dev:
    executor: cli
    steps:
      - checkout

      - run:
          name: publish dev versions
          command: |
            # for integration testing
            circleci orb publish src/@orb.yml circleci/gcp-gcr@dev:alpha --token $CIRCLE_TOKEN

            # for transparency
            circleci orb publish src/@orb.yml circleci/gcp-gcr@dev:$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

            # for potentially promoting to prod
            circleci orb publish src/@orb.yml circleci/gcp-gcr@dev:${CIRCLE_SHA1:0:7} --token $CIRCLE_TOKEN

  trigger-integration:
    executor: node
    parameters:
      tag:
        type: enum
        default: "integration"
        enum: ["integration", master]
    steps:
      - checkout

      - add_ssh_keys:
          fingerprints:
            - "be:d5:b0:4f:41:21:6a:0b:77:19:c4:35:22:a5:1b:11"

      - run:
          name: git config
          command: |
            git config --global user.email "$CIRCLE_USERNAME@users.noreply.github.com"
            git config --global user.name "$CIRCLE_USERNAME"

      - run: |
          INTEGRATION_TAG=<<parameters.tag>>-$CIRCLE_BRANCH-${CIRCLE_SHA1:0:7}
          git tag $INTEGRATION_TAG
          git push origin $INTEGRATION_TAG

  test-orb-commands:
    executor: gcp-gcr/default
    steps:
      # test orb commands
      - checkout
      - gcp-gcr/gcr-auth
      - gcp-gcr/build-image:
          registry-url: us.gcr.io
          image: sample-image
          tag: ${CIRCLE_SHA1:0:7}.$CIRCLE_BUILD_NUMBER
          path-to-dockerfile: .
      - gcp-gcr/push-image:
          registry-url: us.gcr.io
          image: sample-image
          tag: ${CIRCLE_SHA1:0:7}.$CIRCLE_BUILD_NUMBER

  dev-promote-prod:
    executor: cli
    steps:
      - checkout
      - run: circleci orb publish promote circleci/gcp-gcr@dev:${CIRCLE_SHA1:0:7} patch --token $CIRCLE_TOKEN

workflows:
  validate_unit-test_dev-deploy:
    jobs:
      - lint

      - validate:
          requires:
            - lint

      - publish-dev:
          requires:
            - validate
          context: orb-publishing

      - trigger-integration:
          name: trigger-integration-dev
          requires:
            - publish-dev
          filters:
            branches:
              ignore: master

      - trigger-integration:
          name: trigger-integration-master
          tag: master
          requires:
            - publish-dev
          filters:
            branches:
              only: master

  integration_test-prod_deploy:
    jobs:
      # test orb commands
      - test-orb-commands:
          name: test-orb-commands-dev
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /integration-.*/

      - test-orb-commands:
          name: test-orb-commands-master
          context: orb-publishing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      # test orb jobs
      - gcp-gcr/build_and_push_image:
          name: build_and_push_image-dev
          requires:
            - test-orb-commands-dev
          context: orb-publishing
          registry-url: us.gcr.io
          image: sample-image
          tag: ${CIRCLE_SHA1:0:7}.$CIRCLE_BUILD_NUM
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /integration-.*/

      - gcp-gcr/build_and_push_image:
          name: build_and_push_image-master
          requires:
            - test-orb-commands-master
          context: orb-publishing
          registry-url: us.gcr.io
          image: sample-image
          tag: ${CIRCLE_SHA1:0:7}.$CIRCLE_BUILD_NUM
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      # test orb jobs with default values only
      - gcp-gcr/build_and_push_image:
          name: build_push_defaults-dev
          requires:
            - test-orb-commands-dev
          context: orb-publishing
          image: sample-image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /integration-.*/

      - gcp-gcr/build_and_push_image:
          name: build_push_defaults-master
          requires:
            - test-orb-commands-master
          context: orb-publishing
          image: sample-image
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      - gcp-gcr/build_and_push_image:
          name: build_push_all_params-master
          requires:
            - test-orb-commands-master
          context: orb-publishing
          image: sample-image
          registry-url: us.gcr.io
          tag: ${CIRCLE_SHA1:0:7}.$CIRCLE_BUILD_NUM
          gcloud-service-key: NONDEFAULT_SERVICE_KEY
          google-project-id: NONDEFAULT_GOOGLE_PROJECT_ID
          google-compute-zone: NONDEFAULT_GOOGLE_COMPUTE_ZONE
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/

      - dev-promote-prod:
          context: orb-publishing
          requires:
            - build_and_push_image-master
            - build_push_defaults-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-.*/
